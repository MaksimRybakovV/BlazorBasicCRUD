@page "/employee"
@page "/employee/{id:int}"
@inject IHttpService _service

@if(Id is null)
{
    <PageTitle>Create a new employee</PageTitle>
    <h3>Create a new employee</h3>
}
else
{
    <PageTitle>Edit @_employee.FirstName @_employee.LastName</PageTitle>
    <h3>Edit @_employee.FirstName @_employee.LastName</h3>
}

<EditForm Model="_employee" OnSubmit="HandleSubmit">
    <div>
        <label for="firstname">First Name</label>
        <InputText id="firstname" @bind-Value="_employee.FirstName" class="form-control"></InputText>
    </div>
    <div>
        <label for="lastname">Last Name</label>
        <InputText id="lastname" @bind-Value="_employee.LastName" class="form-control"></InputText>
    </div>
    <div>
        <label for="age">Age</label>
        <InputNumber id="age" @bind-Value="_employee.Age" class="form-control"></InputNumber>
    </div>
    <div>
        <label for="jobtitle">Job Title</label>
        <InputSelect id="jobtitle" @bind-Value="_employee.JobTitle" class="form-select">
            @foreach (var job in Enum.GetValues(typeof(JobTitle)))
            {
                <option value="@job">@job</option>
            }
        </InputSelect>
    </div>
    <div>
        <label for="company">Company</label>
        <InputSelect id="company" @bind-Value="_employee.CompanyId" class="form-select">
            @foreach (var company in _service.Companies)
            {
                <option value="@company.Id">@company.Name</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@_buttonText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteEmployee">Delete employee</button>
</EditForm>

@code {
    private Employee _employee = new();
    private string _buttonText = string.Empty;

    [Parameter]
    public int? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _buttonText = Id == null ? "Create new employee" : "Update employee";
        await _service.GetCompanies();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id is not null)
        {
            var response = await _service.GetEmployee((int)Id!);
            if (response.Data is not null)
                _employee = response.Data;
        }
        else
        {
            _employee.CompanyId = _service.Companies[0].Id;
        }
    }

    private async Task HandleSubmit()
    {
        if(Id is null)
        {
            await _service.AddEmployee(_employee);
        }
        else
        {
            await _service.UpdateEmployee(_employee);
        }
    }

    private async Task DeleteEmployee()
    {
        await _service.DeleteEmployee(_employee.Id);
    }
}
