@page "/employees"
@inject IHttpService _service
@inject NavigationManager _navigation

<PageTitle>Employees</PageTitle>

<h3>Employees</h3>

<nav aria-label="Page navigation.">
    <ul class="pagination justify-content-center">
        @if(_page == 1)
        {
            <li class="page-item disabled">
                <span class="page-link">&laquo;</span>
            </li>
        }
        else
        {
            <li class="page-item">
                <span class="page-link" style="cursor:pointer" @onclick="() => ShowPage(_page - 1)">&laquo;</span>
            </li>
        }
        @for(int i = _page - _radius; i <= Math.Min(_page + _radius, _pageCount); i++)
        {
            int j = i;
            @if(i > 0)
            {
                if(i == _page)
                {
                    <li class="page-item active">
                        <span class="page-link">@i</span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <span class="page-link" style="cursor:pointer" @onclick="() => ShowPage(j)">@i</span>
                    </li>
                }
            }
        }
        @if(_page == _pageCount)
        {
            <li class="page-item disabled">
                <span class="page-link">&raquo;</span>
            </li>
        }
        else
        {
            <li class="page-item">
                <span class="page-link" style="cursor:pointer" @onclick="() => ShowPage(_page + 1)">&raquo;</span>
            </li>
        }
    </ul>
</nav>
<table class="table">
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Age</th>
            <th>Job Title</th>
            <th>Company</th>
        </tr>
    </thead>    
    <tbody>
        @foreach (var employee in _service.Employees)
        {
            <tr>
                <td>@employee.FirstName</td>
                <td>@employee.LastName</td>
                <td>@employee.Age</td>
                <td>@employee.JobTitle</td>
                <td>@employee.Company!.Name</td>
                <td>
                    <button class="btn btn-primary" @onclick="(() => ShowDetails(employee.Id))"><i class="oi oi-pencil"></i></button>
                </td>
            </tr>
        }
    </tbody>
</table>
<button class="btn btn-primary" @onclick="CreateEmployee">Create new employee</button>

@code {
    private int _pageSize = 3;
    private int _radius = 2;
    private int _page = 1;
    private int _pageCount;

    protected override async Task OnInitializedAsync()
    {
        await ShowPage(_page);
    }

    private async Task ShowPage(int page)
    {
        var response = await _service.GetPageEmployees(page, _pageSize);
        _pageCount = response.PageCount;
        _page = response.CurrentPage;
    }

    private void ShowDetails(int id)
    {
        _navigation.NavigateTo($"employee/{id}");
    }

    private void CreateEmployee()
    {
        _navigation.NavigateTo($"employee");
    }
}
